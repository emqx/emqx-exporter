name: Release EMQX Exporter

on:
  push:
    tags:
      - "*"

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: docker/setup-qemu-action@v2
    - uses: docker/setup-buildx-action@v2
    - uses: docker/metadata-action@v4
      id: meta
      with:
        images: |
          ${{ github.repository_owner }}/emqx-exporter
          ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=ref,event=tag
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
    - uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USER }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
    - uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}
    - uses: docker/build-push-action@v3
      with:
        platforms: linux/amd64,linux/arm64,linux/arm/v7
        push: ${{ startsWith(github.ref, 'refs/tags/') }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        context: .
    - uses: peter-evans/dockerhub-description@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USER }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
        repository: "${{ github.repository }}"
        readme-filepath: ./README.md
        short-description: "Exporter for EMQX metrics."

  release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        go-version: 1.20.x
    - name: Build
      env:
        VSN: ${{ github.ref_name }}
      run: make build
    - id: prerelease
      run: |
        if echo "${{ github.ref_name }}" |egrep -q "^[0-9].[0-9].[0-9]$"; then
          echo "prerelease=false" >> $GITHUB_OUTPUT
        else
          echo "prerelease=true" >> $GITHUB_OUTPUT
        fi
    - uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        prerelease: ${{ steps.prerelease.outputs.prerelease }}
        token: ${{ github.token }}
        name: EMQX Exporter ${{ github.ref_name }} Released
        body_path: RELEASE.md
        generate_release_notes: true
        files: |
          emqx-exporter-**.tgz
